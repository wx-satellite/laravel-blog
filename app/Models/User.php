<?php

namespace App\Models;

use Illuminate\Notifications\Notifiable;
use Illuminate\Contracts\Auth\MustVerifyEmail;
use Illuminate\Foundation\Auth\User as Authenticatable;
use Illuminate\Support\Facades\Mail;
use Illuminate\Support\Str;

class User extends Authenticatable
{
    use Notifiable;

    /**
     * The attributes that are mass assignable.
     *
     * @var array
     */
    protected $fillable = [
        'name', 'email', 'password',
    ];

    /**
     * The attributes that should be hidden for arrays.
     *
     * @var array
     */
    protected $hidden = [
        'password', 'remember_token',
    ];

    /**
     * The attributes that should be cast to native types.
     *
     * @var array
     */
    protected $casts = [
        'email_verified_at' => 'datetime',
    ];

    public function headImage($size = 100) {
        $hash = md5(strtolower($this->attributes["email"]));
        return "http://www.gravatar.com/avatar/$hash?s=$size";
    }

    // 模型事件注册
    public static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub

        // 模型事件批量操作时可能有坑：https://learnku.com/laravel/t/4067/eloquent-model-update-cannot-trigger-event
        static::creating(function($user){
            $user->activation_token = Str::random(10);
        });
    }

    // 发送邮件
    public function sendEmailConfirmationTo($user) {
        $view = "emails.confirm";
        $data = compact("user");
        $from = "15658283276@163.com";
        $to = $user->email;
        $name = "三斤和他的猫";
        $subject = "测试邮件";
        Mail::send($view,$data,function($message)use($from,$to,$name,$subject){
            $message->from($from,$name)->to($to)->subject($subject);
        });
    }
}
